{"ast":null,"code":"var _jsxFileName = \"/home/joaopds/\\xC1rea de Trabalho/localStorage/cadastro/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { TextField, FormControl, Box, Button, Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  var [value, setValue] = useState({\n    \"valor\": \"\"\n  });\n  const inputForm = new FormData(document.querySelector('#formulario'));\n  var valorTratado = \"\";\n  const SalvaLocalStorage = () => {\n    let data = {\n      \"nome\": document.querySelector(\"#nome\").value\n    };\n    localStorage.setItem(\"data\", data);\n    console.log(data.nome);\n    console.log(inputForm.get(\"id\"));\n  };\n  const DuplicaValor = () => {\n    let valor = document.querySelector(\"#nome\").value;\n    let valorSplit = valor.split(\"\");\n    for (let i = 0; i < valor.length; i++) {\n      valorSplit[i] = \"|\" + valor[i];\n      valorTratado += valorSplit[i];\n    }\n    setValue({\n      \"valor\": valorTratado\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      Style: \"text-align:center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          '& .MuiTextField-root': {\n            m: 0.5,\n            width: '25ch'\n          }\n        },\n        component: \"form\",\n        autocomplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"formulario\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            size: \"small\",\n            name: \"nome\",\n            id: \"nome\",\n            label: \"Nome Completo\",\n            variant: \"outlined\",\n            onChange: () => DuplicaValor()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            name: \"email\",\n            id: \"email\",\n            label: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            name: \"repeteco\",\n            id: \"repeteco\",\n            label: \"Repeteco\",\n            type: \"text\",\n            value: value.valor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: () => SalvaLocalStorage(),\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"pusqZ5td6SgVz7h17OifWEOPhRI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","FormControl","Box","Button","Container","Login","value","setValue","inputForm","FormData","document","querySelector","valorTratado","SalvaLocalStorage","data","localStorage","setItem","console","log","nome","get","DuplicaValor","valor","valorSplit","split","i","length","m","width"],"sources":["/home/joaopds/Área de Trabalho/localStorage/cadastro/src/components/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {TextField, FormControl, Box, Button, Container} from '@mui/material'\n\nconst Login = ()=>{\n    \n    var [value,setValue] = useState({\"valor\":\"\"})\n    const inputForm = new FormData(document.querySelector('#formulario'))\n    var valorTratado = \"\"\n\n    const SalvaLocalStorage = ()=>{\n        let data = {\"nome\":document.querySelector(\"#nome\").value}\n        localStorage.setItem(\"data\",data)\n        console.log(data.nome)   \n\n       \n        console.log(inputForm.get(\"id\"));\n\n    }\n\n    const DuplicaValor = ()=>{\n        let valor = document.querySelector(\"#nome\").value \n        let valorSplit = valor.split(\"\")\n            \n        for(let i = 0; i<valor.length; i++){\n            valorSplit[i] = \"|\"+valor[i]\n            valorTratado += valorSplit[i]\n            \n        }    \n        setValue({\"valor\":valorTratado})\n    }\n\n    \n\n    return(\n        <>\n            <Container fixed Style={\"text-align:center\"}>\n                <Box   sx={{'& .MuiTextField-root': { m: 0.5, width: '25ch' }}}\n                        component=\"form\"\n                        autocomplete=\"off\">\n                    <form id=\"formulario\">\n                        <input type=\"text\" size=\"small\" name=\"nome\" id=\"nome\" label=\"Nome Completo\" variant=\"outlined\"  onChange={() => DuplicaValor()}/>\n                        <TextField size=\"small\" name = \"email\" id=\"email\" label=\"email\" type=\"email\" />\n                        <TextField size=\"small\" name = \"repeteco\" id=\"repeteco\" label=\"Repeteco\" type=\"text\" value={value.valor}/>\n                        <Button variant=\"contained\" color=\"success\" onClick={() => SalvaLocalStorage()}>Enviar</Button>\n                    </form>\n                </Box>\n            </Container>\n        </>\n    )\n}\n\nexport default Login\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}